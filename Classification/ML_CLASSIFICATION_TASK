{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNu42m5jukJSS4cYPUNJP04"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"t8h0o1-nf5hT"},"outputs":[],"source":["# IMPORTING LIBRARIES\n","\n","import numpy as np # A useful package for dealing with mathematical processes, we will be using it this week for vectors and matrices\n","import pandas as pd # A common package for viewing tabular data\n","\n","from sklearn.preprocessing import StandardScaler, MinMaxScaler # We will be using the inbuilt sclaing functions sklearn provides\n","import matplotlib.pyplot as plt # We will be using Matplotlib for our graphs\n","from sklearn.preprocessing import PolynomialFeatures # A preprocessing function allowing us to include polynomial features into our model\n","\n","from google.colab import files # We will be importing a csv file I have provided for one section.\n","from sklearn.preprocessing import LabelEncoder, OneHotEncoder # We will be using these to encode categorical features\n","\n","from sklearn.impute import SimpleImputer # Performs basic imputations when doing preprocessing\n","import matplotlib.pyplot as plt\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.ensemble import RandomForestClassifier\n","from sklearn.metrics import accuracy_score, f1_score, log_loss, confusion_matrix, classification_report, precision_score, recall_score\n","from sklearn import svm\n","import seaborn as sns\n","import random\n","!pip install scikeras\n","# pd.options.mode.chained_assignment = None  # default='warn'\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","# UPLOADING CSV FILES\n","# uploaded = files.upload()    # Will prompt you to select file\n","\n","training_data = pd.read_csv('Titanic_train.csv') # Save it to a pandas dataframe\n","testing_data = pd.read_csv('Titanic_test.csv')\n","\n","# 1) IMPUTATION NEEDED\n","\n","# Checking for null values in data\n","print(training_data.isnull().sum(), \"\\n\")\n","# Percentage of null values\n","print((training_data.isnull().sum() / len(training_data.index)) * 100, \"\\n\")\n","\n","# Training\n","# Age: 20.923 %\n","# Embarked: 0.1538 %\n","\n","# Checking for null values in data\n","print(testing_data.isnull().sum(), \"\\n\")\n","# Percentage of null values\n","print((testing_data.isnull().sum() / len(testing_data.index)) * 100, \"\\n\")\n","\n","# Testing\n","# Age: 17.012448\n","# Embarked: 0.414938\n","\n","# DISTRIBUTING FEATURES AND OUTPUT\n","features = training_data.columns.tolist()\n","features.remove('Target: Survived')\n","# TRAINING DATA\n","X_train_raw = training_data[features]\n","y_train = training_data['Target: Survived']\n","\n","print(\"Total Features: \", features)\n","print(\"X train shape: \", X_train_raw.shape, \"\\nY train shape: \", y_train.shape)\n","# display(X_train_raw.head(), y_train_raw.head())\n","\n","# TESTING DATA\n","X_test_raw = testing_data[features]\n","y_test = testing_data['Target: Survived']\n","\n","print(\"X test shape: \", X_test_raw.shape, \"\\nY test shape: \", y_test.shape)\n","\n","columns_to_drop = ['Name', 'Ticket', 'Embarked']\n","# ['PassengerId', 'Name', 'Ticket', 'Embarked']\n","\n","# TRAINING DROP\n","X_train_raw = X_train_raw.drop(columns=columns_to_drop) # Remove the No. column using '.drop'\n","# TESTING DROP\n","X_test_raw = X_test_raw.drop(columns=columns_to_drop) # Remove the No. column using '.drop'\n","display(\"X Train \", X_train_raw.head(), \"X Test \", X_test_raw.head())\n","\n","#------------------------------------------------------------------------------#"]},{"cell_type":"markdown","metadata":{"id":"UlcB76KHq5Qb"},"source":["#**EXPLORATORY DATA ANALYSIS**"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":13,"status":"ok","timestamp":1678725124937,"user":{"displayName":"Abhishek Borkar","userId":"13435915907761363769"},"user_tz":0},"id":"5pWrPMk00aIk","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"3765405b-5c39-401f-8dc4-947c5385493b"},"outputs":[{"output_type":"display_data","data":{"text/plain":["       PassengerId      Pclass         Age       SibSp       Parch        Fare\n","count    650.00000  650.000000  514.000000  650.000000  650.000000  650.000000\n","mean     325.50000    2.309231   29.875000    0.535385    0.383077   31.450063\n","std      187.78312    0.837161   14.639321    1.076207    0.804086   45.087844\n","min        1.00000    1.000000    0.750000    0.000000    0.000000    0.000000\n","25%      163.25000    2.000000   21.000000    0.000000    0.000000    7.925000\n","50%      325.50000    3.000000   28.000000    0.000000    0.000000   15.047900\n","75%      487.75000    3.000000   38.000000    1.000000    0.000000   30.646850\n","max      650.00000    3.000000   80.000000    8.000000    5.000000  512.329200"],"text/html":["\n","  <div id=\"df-c2739efc-19c9-44f0-922c-e13973f01a58\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>650.00000</td>\n","      <td>650.000000</td>\n","      <td>514.000000</td>\n","      <td>650.000000</td>\n","      <td>650.000000</td>\n","      <td>650.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>325.50000</td>\n","      <td>2.309231</td>\n","      <td>29.875000</td>\n","      <td>0.535385</td>\n","      <td>0.383077</td>\n","      <td>31.450063</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>187.78312</td>\n","      <td>0.837161</td>\n","      <td>14.639321</td>\n","      <td>1.076207</td>\n","      <td>0.804086</td>\n","      <td>45.087844</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.00000</td>\n","      <td>1.000000</td>\n","      <td>0.750000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>163.25000</td>\n","      <td>2.000000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.925000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>325.50000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>15.047900</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>487.75000</td>\n","      <td>3.000000</td>\n","      <td>38.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>30.646850</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>650.00000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>5.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c2739efc-19c9-44f0-922c-e13973f01a58')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-c2739efc-19c9-44f0-922c-e13973f01a58 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-c2739efc-19c9-44f0-922c-e13973f01a58');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["       PassengerId      Pclass         Age       SibSp       Parch        Fare\n","count   241.000000  241.000000  200.000000  241.000000  241.000000  241.000000\n","mean    121.000000    2.307054   29.247100    0.489627    0.377593   34.238208\n","std      69.714896    0.834860   14.258735    1.173002    0.813017   60.452153\n","min       1.000000    1.000000    0.420000    0.000000    0.000000    0.000000\n","25%      61.000000    2.000000   19.000000    0.000000    0.000000    7.895800\n","50%     121.000000    3.000000   28.000000    0.000000    0.000000   13.000000\n","75%     181.000000    3.000000   39.000000    1.000000    0.000000   31.275000\n","max     241.000000    3.000000   74.000000    8.000000    6.000000  512.329200"],"text/html":["\n","  <div id=\"df-084645f8-dbfe-4765-91bb-97891d058426\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>241.000000</td>\n","      <td>241.000000</td>\n","      <td>200.000000</td>\n","      <td>241.000000</td>\n","      <td>241.000000</td>\n","      <td>241.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>121.000000</td>\n","      <td>2.307054</td>\n","      <td>29.247100</td>\n","      <td>0.489627</td>\n","      <td>0.377593</td>\n","      <td>34.238208</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>69.714896</td>\n","      <td>0.834860</td>\n","      <td>14.258735</td>\n","      <td>1.173002</td>\n","      <td>0.813017</td>\n","      <td>60.452153</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>0.420000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>61.000000</td>\n","      <td>2.000000</td>\n","      <td>19.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.895800</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>121.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>13.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>181.000000</td>\n","      <td>3.000000</td>\n","      <td>39.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.275000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>241.000000</td>\n","      <td>3.000000</td>\n","      <td>74.000000</td>\n","      <td>8.000000</td>\n","      <td>6.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-084645f8-dbfe-4765-91bb-97891d058426')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-084645f8-dbfe-4765-91bb-97891d058426 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-084645f8-dbfe-4765-91bb-97891d058426');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["         Sex\n","count    650\n","unique     2\n","top     male\n","freq     411"],"text/html":["\n","  <div id=\"df-6ec1647b-9329-46af-9181-5b8c2d19c38e\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>650</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>male</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>411</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ec1647b-9329-46af-9181-5b8c2d19c38e')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6ec1647b-9329-46af-9181-5b8c2d19c38e button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6ec1647b-9329-46af-9181-5b8c2d19c38e');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["         Sex\n","count    241\n","unique     2\n","top     male\n","freq     166"],"text/html":["\n","  <div id=\"df-e5a3c1cd-0660-43ad-9e1c-11aac178455d\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Sex</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>241</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>male</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>166</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e5a3c1cd-0660-43ad-9e1c-11aac178455d')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-e5a3c1cd-0660-43ad-9e1c-11aac178455d button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-e5a3c1cd-0660-43ad-9e1c-11aac178455d');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["###################################################\n","Null values in Column AGE:\n"]},{"output_type":"display_data","data":{"text/plain":["     PassengerId  Pclass     Sex  Age  SibSp  Parch     Fare\n","5              6       3    male  NaN      0      0   8.4583\n","17            18       2    male  NaN      0      0  13.0000\n","19            20       3  female  NaN      0      0   7.2250\n","26            27       3    male  NaN      0      0   7.2250\n","28            29       3  female  NaN      0      0   7.8792\n","..           ...     ...     ...  ...    ...    ...      ...\n","629          630       3    male  NaN      0      0   7.7333\n","633          634       1    male  NaN      0      0   0.0000\n","639          640       3    male  NaN      1      0  16.1000\n","643          644       3    male  NaN      0      0  56.4958\n","648          649       3    male  NaN      0      0   7.5500\n","\n","[136 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-6e34fff1-e8dd-47fc-8fa4-8c98d0f6b755\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>5</th>\n","      <td>6</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>8.4583</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>18</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>13.0000</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>20</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2250</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>27</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.2250</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>29</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.8792</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>629</th>\n","      <td>630</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.7333</td>\n","    </tr>\n","    <tr>\n","      <th>633</th>\n","      <td>634</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0000</td>\n","    </tr>\n","    <tr>\n","      <th>639</th>\n","      <td>640</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>16.1000</td>\n","    </tr>\n","    <tr>\n","      <th>643</th>\n","      <td>644</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>56.4958</td>\n","    </tr>\n","    <tr>\n","      <th>648</th>\n","      <td>649</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>7.5500</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>136 rows × 7 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6e34fff1-e8dd-47fc-8fa4-8c98d0f6b755')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-6e34fff1-e8dd-47fc-8fa4-8c98d0f6b755 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-6e34fff1-e8dd-47fc-8fa4-8c98d0f6b755');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["###################################################\n","Rows where Fare is 0\n"]},{"output_type":"display_data","data":{"text/plain":["     PassengerId  Pclass   Sex   Age  SibSp  Parch  Fare\n","179          180       3  male  36.0      0      0   0.0\n","263          264       1  male  40.0      0      0   0.0\n","271          272       3  male  25.0      0      0   0.0\n","277          278       2  male   NaN      0      0   0.0\n","302          303       3  male  19.0      0      0   0.0\n","413          414       2  male   NaN      0      0   0.0\n","466          467       2  male   NaN      0      0   0.0\n","481          482       2  male   NaN      0      0   0.0\n","597          598       3  male  49.0      0      0   0.0\n","633          634       1  male   NaN      0      0   0.0"],"text/html":["\n","  <div id=\"df-42bfffc5-e562-471f-a672-d861ecba984f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>179</th>\n","      <td>180</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>36.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>263</th>\n","      <td>264</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>40.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>271</th>\n","      <td>272</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>25.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>277</th>\n","      <td>278</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>302</th>\n","      <td>303</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>19.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>413</th>\n","      <td>414</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>466</th>\n","      <td>467</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>481</th>\n","      <td>482</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>597</th>\n","      <td>598</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>49.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","    <tr>\n","      <th>633</th>\n","      <td>634</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-42bfffc5-e562-471f-a672-d861ecba984f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-42bfffc5-e562-471f-a672-d861ecba984f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-42bfffc5-e562-471f-a672-d861ecba984f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{}}],"source":["################################################################################\n","# NUMERICAL DATA\n","display(X_train_raw.select_dtypes(include=np.number).describe())\n","display(X_test_raw.select_dtypes(include=np.number).describe())\n","\n","# CATEGORICAL DATA\n","display(X_train_raw.select_dtypes(exclude=np.number).describe())\n","display(X_test_raw.select_dtypes(exclude=np.number).describe())\n","\n","# TRAINING\n","#display(pd.unique(X_train_raw['Sex']))\n","# TESTING\n","#display(pd.unique(X_test_raw['Sex']))\n","\n","# 136 rows having NAN values\n","print(\"###################################################\")\n","print(\"Null values in Column AGE:\")\n","display(X_train_raw[X_train_raw['Age'].isnull()])\n","\n","print(\"###################################################\")\n","print(\"Rows where Fare is 0\")\n","display(X_train_raw[X_train_raw['Fare'] == 0])\n","#------------------------------------------------------------------------------#"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":852,"status":"ok","timestamp":1678725125778,"user":{"displayName":"Abhishek Borkar","userId":"13435915907761363769"},"user_tz":0},"id":"fngqVgBZs5TJ","colab":{"base_uri":"https://localhost:8080/","height":576},"outputId":"58e45b7c-2f19-47f2-ed68-480cdc71d9c5"},"outputs":[{"output_type":"stream","name":"stdout","text":["PassengerId         0.000000\n","Pclass             -0.632697\n","Age                 0.383858\n","SibSp               3.460623\n","Parch               2.604968\n","Fare                4.240072\n","Target: Survived    0.435527\n","dtype: float64\n","0.15623913841536652\n"]},{"output_type":"execute_result","data":{"text/plain":["array([[<AxesSubplot:title={'center':'PassengerId'}>,\n","        <AxesSubplot:title={'center':'Pclass'}>,\n","        <AxesSubplot:title={'center':'Age'}>],\n","       [<AxesSubplot:title={'center':'SibSp'}>,\n","        <AxesSubplot:title={'center':'Parch'}>,\n","        <AxesSubplot:title={'center':'Fare'}>],\n","       [<AxesSubplot:title={'center':'Target: Survived'}>,\n","        <AxesSubplot:>, <AxesSubplot:>]], dtype=object)"]},"metadata":{},"execution_count":18},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 9 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["# SKEWNESS AND KURTOSIS\n","print(training_data.skew())\n","print(training_data.Age.kurt())\n","\n","# HISTOGRAM\n","training_data.hist()\n","#------------------------------------------------------------------------------#"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":961,"status":"ok","timestamp":1678725126733,"user":{"displayName":"Abhishek Borkar","userId":"13435915907761363769"},"user_tz":0},"id":"jSOeatnMuXRP","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"53883f0b-c536-4f4a-a968-a18d684c4ab7"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}},{"output_type":"execute_result","data":{"text/plain":["<AxesSubplot:>"]},"metadata":{},"execution_count":19},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["#training_data.Embarked.value_counts().plot(kind = 'bar')\n","#plt.show()\n","training_data.Pclass.value_counts().plot(kind = 'bar')\n","plt.show()\n","training_data.SibSp.value_counts().plot(kind = 'bar')\n","plt.show()\n","training_data.Parch.value_counts().plot(kind = 'bar')\n","plt.show()\n","training_data.Fare.hist()\n","#------------------------------------------------------------------------------#"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":834,"status":"ok","timestamp":1678725127561,"user":{"displayName":"Abhishek Borkar","userId":"13435915907761363769"},"user_tz":0},"id":"KX80_H0k7QEV","colab":{"base_uri":"https://localhost:8080/","height":371},"outputId":"1789fb84-e645-4eb8-aa38-0cde0f17fcee"},"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Gender Ratio')"]},"metadata":{},"execution_count":20},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["plt.figure(figsize=(10,5))\n","ax = plt.subplot(1,2,1)\n","ax = sns.countplot(x='Sex', data=training_data)\n","ax.bar_label(ax.containers[0])\n","plt.title(\"Gender Ratio\", fontsize=18)\n","ax =plt.subplot(1,2,2)\n","ax=training_data['Sex'].value_counts().plot.pie(explode=[0.05, 0.05],autopct='%1.2f%%',shadow=True)\n","ax.set_title(label = \"Gender Ratio\", fontsize = 18)\n","#------------------------------------------------------------------------------#"]},{"cell_type":"code","source":["plt.figure(figsize=(10,5))\n","ax = plt.subplot(1,2,1)\n","ax = sns.countplot(x='Sex', data=testing_data)\n","ax.bar_label(ax.containers[0])\n","plt.title(\"Gender Ratio\", fontsize=18)\n","ax =plt.subplot(1,2,2)\n","ax=testing_data['Sex'].value_counts().plot.pie(explode=[0.05, 0.05],autopct='%1.2f%%',shadow=True)\n","ax.set_title(label = \"Gender Ratio\", fontsize = 18)\n","#------------------------------------------------------------------------------#"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":371},"id":"Fnf-wdNyMYot","executionInfo":{"status":"ok","timestamp":1678731505524,"user_tz":0,"elapsed":747,"user":{"displayName":"Abhishek Borkar","userId":"13435915907761363769"}},"outputId":"c96a6c31-d297-4424-a491-bb4e661dd617"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Gender Ratio')"]},"metadata":{},"execution_count":56},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["print((training_data['Target: Survived'].sum()/len(training_data.index)) * 100)\n","print((testing_data['Target: Survived'].sum()/len(testing_data.index)) * 100)\n","# print((len(training_data[training_data['Target: Survived'] == 1])/len(training_data)) * 100)\n","#------------------------------------------------------------------------------#"],"metadata":{"id":"h1dmgn_Da12V","executionInfo":{"status":"ok","timestamp":1678731454996,"user_tz":0,"elapsed":207,"user":{"displayName":"Abhishek Borkar","userId":"13435915907761363769"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"4ffbc697-2fb7-4428-da85-1b5c172837f1"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["39.38461538461539\n","35.684647302904565\n","39.38461538461539\n"]}]},{"cell_type":"markdown","metadata":{"id":"I-RCOcY3s3so"},"source":["#***AUTO PREPROCESS DATA USING POLY. DEGREE***"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EUxppQma1Xcz"},"outputs":[],"source":["def auto_preprocess(degree):\n","  ################################################################################\n","  # PRE PROCESSING\n","  # Training\n","  \n","  # Feature 'Fare' had minmum of 0.0 Fare which was unreasonable \n","  # Mean was replaced according to the Passenger class and not throughout column\n","  # _(empty) values for Pclass == 1/2/3 was replaced with mean(data['PClass]==1/2/3)\n","\n","  train_pclass_1 = X_train_raw[X_train_raw['Pclass']==1]['Fare'].mean()\n","  train_pclass_2 = X_train_raw[X_train_raw['Pclass']==2]['Fare'].mean()\n","  train_pclass_3 = X_train_raw[X_train_raw['Pclass']==3]['Fare'].mean()\n","  \n","  X_train_raw.loc[(X_train_raw.Fare==0) & (X_train_raw.Pclass==1), 'Fare'] = train_pclass_1\n","  X_train_raw.loc[(X_train_raw.Fare==0) & (X_train_raw.Pclass==2), 'Fare'] = train_pclass_2\n","  X_train_raw.loc[(X_train_raw.Fare==0) & (X_train_raw.Pclass==3), 'Fare'] = train_pclass_3\n","  \n","  ################################################################################\n","  # Testing\n","  \n","  # Feature 'Fare' had minmum of 0.0 Fare which was unreasonable \n","  # Mean was replaced according to the Passenger class and not throughout column\n","  # _(empty) values for Pclass == 1/2/3 was replaced with mean(data['PClass]==1/2/3)\n","  \n","  test_pclass_1 = X_test_raw[X_test_raw['Pclass']==1]['Fare'].mean()\n","  test_pclass_2 = X_test_raw[X_test_raw['Pclass']==2]['Fare'].mean()\n","  test_pclass_3 = X_test_raw[X_test_raw['Pclass']==3]['Fare'].mean()\n","  \n","  X_test_raw.loc[(X_test_raw.Fare==0) & (X_test_raw.Pclass==1), 'Fare'] = test_pclass_1\n","  X_test_raw.loc[(X_test_raw.Fare==0) & (X_test_raw.Pclass==2), 'Fare'] = test_pclass_2\n","  X_test_raw.loc[(X_test_raw.Fare==0) & (X_test_raw.Pclass==3), 'Fare'] = test_pclass_3\n","  \n","  ################################################################################\n","\n","  poly = PolynomialFeatures(degree = degree)\n","  scaler = StandardScaler()\n","\n","  # IMPUTATION STRATEGY\n","  \n","  # Mean - Numerical Data\n","  # Most Frequent - Categorical Data\n","  \n","  # Training Data\n","  X_train_num = X_train_raw.select_dtypes(include=np.number)\n","  X_train_cat = X_train_raw.select_dtypes(exclude=np.number)\n","  \n","  # Testing Data\n","  X_test_num = X_test_raw.select_dtypes(include=np.number)\n","  X_test_cat = X_test_raw.select_dtypes(exclude=np.number)\n","  \n","  # Create our imputer objects\n","  numeric_imputer = SimpleImputer(strategy='mean')\n","  categorical_imputer = SimpleImputer(strategy='most_frequent')\n","  \n","  # Fit the imputers on the training data\n","  numeric_imputer.fit(X_train_num)\n","  categorical_imputer.fit(X_train_cat)\n","  \n","  X_train_num_imp = numeric_imputer.transform(X_train_num)\n","  X_train_cat_imp = categorical_imputer.transform(X_train_cat)\n","\n","  X_test_num_imp = numeric_imputer.transform(X_test_num)\n","  X_test_cat_imp = categorical_imputer.transform(X_test_cat)\n","\n","  # Transform the training and test data\n","  X_train_num_imp_poly = poly.fit_transform(X_train_num_imp)\n","  X_train_num_imp_poly_sca = scaler.fit_transform(X_train_num_imp_poly)\n","\n","  X_test_num_imp_poly = poly.transform(X_test_num_imp)\n","  X_test_num_imp_poly_sca = scaler.transform(X_test_num_imp_poly)\n","\n","  # One Hot Encoding\n","  encoder = OneHotEncoder(handle_unknown='ignore', sparse=False)\n","  # Fit encoder on the training data\n","  encoder.fit(X_train_cat_imp)\n","  \n","  # Transform the test and train data\n","  X_train_onehot = encoder.transform(X_train_cat_imp)\n","  X_test_onehot = encoder.transform(X_test_cat_imp)\n","  \n","  # CATEGORICAL FEATS TO -> POLY FEATS\n","  # ###########################\n","  # X_train_onehot = poly.fit_transform(X_train_onehot)\n","  # X_test_onehot = poly.transform(X_test_onehot)\n","  # ###########################\n","  \n","  X_train = np.concatenate([X_train_num_imp_poly_sca, X_train_onehot], axis=1)\n","  X_test = np.concatenate([X_test_num_imp_poly_sca, X_test_onehot], axis=1)\n","\n","  return X_train, X_test\n","\n","\n","def auto_preprocess_without_poly():\n","  ################################################################################\n","  # PRE PROCESSING\n","  # Training\n","  \n","  # Feature 'Fare' had minmum of 0.0 Fare which was unreasonable \n","  # Mean was replaced according to the Passenger class and not throughout column\n","  # _(empty) values for Pclass == 1/2/3 was replaced with mean(data['PClass]==1/2/3)\n","\n","  train_pclass_1 = X_train_raw[X_train_raw['Pclass']==1]['Fare'].mean()\n","  train_pclass_2 = X_train_raw[X_train_raw['Pclass']==2]['Fare'].mean()\n","  train_pclass_3 = X_train_raw[X_train_raw['Pclass']==3]['Fare'].mean()\n","  \n","  X_train_raw.loc[(X_train_raw.Fare==0) & (X_train_raw.Pclass==1), 'Fare'] = train_pclass_1\n","  X_train_raw.loc[(X_train_raw.Fare==0) & (X_train_raw.Pclass==2), 'Fare'] = train_pclass_2\n","  X_train_raw.loc[(X_train_raw.Fare==0) & (X_train_raw.Pclass==3), 'Fare'] = train_pclass_3\n","  \n","  ################################################################################\n","  # Testing\n","  \n","  # Feature 'Fare' had minmum of 0.0 Fare which was unreasonable \n","  # Mean was replaced according to the Passenger class and not throughout column\n","  # _(empty) values for Pclass == 1/2/3 was replaced with mean(data['PClass]==1/2/3)\n","  \n","  test_pclass_1 = X_test_raw[X_test_raw['Pclass']==1]['Fare'].mean()\n","  test_pclass_2 = X_test_raw[X_test_raw['Pclass']==2]['Fare'].mean()\n","  test_pclass_3 = X_test_raw[X_test_raw['Pclass']==3]['Fare'].mean()\n","  \n","  X_test_raw.loc[(X_test_raw.Fare==0) & (X_test_raw.Pclass==1), 'Fare'] = test_pclass_1\n","  X_test_raw.loc[(X_test_raw.Fare==0) & (X_test_raw.Pclass==2), 'Fare'] = test_pclass_2\n","  X_test_raw.loc[(X_test_raw.Fare==0) & (X_test_raw.Pclass==3), 'Fare'] = test_pclass_3\n","  \n","  ################################################################################\n","\n","  scaler = StandardScaler()\n","\n","  # IMPUTATION STRATEGY\n","  \n","  # Mean - Numerical Data\n","  # Most Frequent - Categorical Data\n","  \n","  # Training Data\n","  X_train_num = X_train_raw.select_dtypes(include=np.number)\n","  X_train_cat = X_train_raw.select_dtypes(exclude=np.number)\n","  \n","  # Testing Data\n","  X_test_num = X_test_raw.select_dtypes(include=np.number)\n","  X_test_cat = X_test_raw.select_dtypes(exclude=np.number)\n","  \n","  # Create our imputer objects\n","  numeric_imputer = SimpleImputer(strategy='mean')\n","  categorical_imputer = SimpleImputer(strategy='most_frequent')\n","  \n","  # Fit the imputers on the training data\n","  numeric_imputer.fit(X_train_num)\n","  categorical_imputer.fit(X_train_cat)\n","  \n","  X_train_num_imp = numeric_imputer.transform(X_train_num)\n","  X_train_cat_imp = categorical_imputer.transform(X_train_cat)\n","\n","  X_test_num_imp = numeric_imputer.transform(X_test_num)\n","  X_test_cat_imp = categorical_imputer.transform(X_test_cat)\n","\n","  # Transform the training and test data\n","  X_train_num_imp_poly_sca = scaler.fit_transform(X_train_num_imp)\n","\n","  X_test_num_imp_poly_sca = scaler.transform(X_test_num_imp)\n","\n","  # One Hot Encoding\n","  encoder = OneHotEncoder(handle_unknown='ignore', sparse=False)\n","  # Fit encoder on the training data\n","  encoder.fit(X_train_cat_imp)\n","  \n","  # Transform the test and train data\n","  X_train_onehot = encoder.transform(X_train_cat_imp)\n","  X_test_onehot = encoder.transform(X_test_cat_imp)\n","  \n","  X_train = np.concatenate([X_train_num_imp_poly_sca, X_train_onehot], axis=1)\n","  X_test = np.concatenate([X_test_num_imp_poly_sca, X_test_onehot], axis=1)\n","\n","  return X_train, X_test\n","\n","#------------------------------------------------------------------------------#"]},{"cell_type":"markdown","metadata":{"id":"DGGtcLvZVtR_"},"source":["#**ANALYSING DEGREE USING POLY FEATS.**"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"EbdO40sj7VV9"},"outputs":[],"source":["def polynom(max_degree, degrees, model_):\n","\n","  acc_train_array = np.full([max_degree + 1], np.nan)\n","  acc_test_array = np.full([max_degree + 1], np.nan)\n","\n","  f1_train_array = np.full([max_degree + 1], np.nan)\n","  f1_test_array = np.full([max_degree + 1], np.nan)\n","\n","  for degree in degrees:\n","\n","    # Initialise\n","    model = model_\n","    X_train, X_test = auto_preprocess(degree)\n","    \n","    model.fit(X_train, y_train)\n","    # Train\n","    y_pred_train = model.predict(X_train)\n","    acc_train = accuracy_score(y_train, y_pred_train)\n","    f1_train = f1_score(y_train, y_pred_train)\n","\n","    # Test  \n","    y_pred_test = model.predict(X_test)\n","    acc_test = accuracy_score(y_test, y_pred_test)\n","    f1_test = f1_score(y_test, y_pred_test)\n","\n","    # Store MSE for this degree value\n","    acc_train_array[degree] = acc_train\n","    acc_test_array[degree] = acc_test\n","\n","    # Store R2 for this degree values\n","    f1_train_array[degree] = f1_train\n","    f1_test_array[degree] = f1_test\n","\n","  return acc_train_array, acc_test_array, f1_train_array, f1_test_array\n","\n","#------------------------------------------------------------------------------#"]},{"cell_type":"markdown","metadata":{"id":"gVkBoV7RkLAI"},"source":["#***ANALYSING C***"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"B1UCvUOCkVN-"},"outputs":[],"source":["def param_c(elements, degree, model):\n","  \n","  c_range = np.arange((2 * elements) + 1)\n","  c_nums = np.array(np.logspace(-elements, elements, (2 * elements) + 1))\n","\n","  acc_train_array = np.full([len(c_nums)], np.nan) \n","  acc_test_array = np.full([len(c_nums)], np.nan)\n","  \n","  X_train, X_test = auto_preprocess(degree)\n","\n","  if model == \"Logistic_Regression\":\n","    for index, value in zip(c_range, c_nums):\n","\n","      obj = LogisticRegression(C=value, solver='liblinear', penalty='l1')\n","      obj.fit(X_train, y_train)\n","      \n","      # Training\n","      y_pred_train_log = obj.predict(X_train)\n","      acc_train = accuracy_score(y_train, y_pred_train_log)\n","      acc_train_array[index] = acc_train\n","      \n","      y_pred_test_log = obj.predict(X_test)\n","      acc_test = accuracy_score(y_test, y_pred_test_log)\n","      acc_test_array[index] = acc_test\n","\n","      print(f'C: {value:.1e}, Testing accuracy: {acc_test}')\n","  \n","    return acc_train_array, acc_test_array, c_nums\n","  \n","  elif model == \"svm\":\n","    for index, value in zip(c_range, c_nums):\n","      obj = svm.SVC(C=value,)\n","      obj.fit(X_train, y_train)\n","\n","      # Training\n","      y_pred_train_log = obj.predict(X_train)\n","      acc_train = accuracy_score(y_train, y_pred_train_log)\n","      acc_train_array[index] = acc_train\n","\n","      y_pred_test_log = obj.predict(X_test)\n","      acc_test = accuracy_score(y_test, y_pred_test_log)\n","      acc_test_array[index] = acc_test\n","\n","      print(f'C: {value:.1e}, Testing accuracy: {acc_test}')\n","  \n","    return acc_train_array, acc_test_array, c_nums\n","  \n","# acc_train_array, acc_test_array, c_nums = param_c(50, 3)\n","#------------------------------------------------------------------------------#"]},{"cell_type":"markdown","source":["#***ANALYSING GAMMA***"],"metadata":{"id":"b3DNGMO5IDQa"}},{"cell_type":"code","source":["def param_gamma(elements, degree, c):\n","  \n","  g_range = np.arange((2 * elements) + 1)\n","  g_nums = np.array(np.logspace(-elements, elements, (2 * elements) + 1))\n","\n","  acc_train_array = np.full([len(c_nums)], np.nan) \n","  acc_test_array = np.full([len(c_nums)], np.nan)\n","  \n","  X_train, X_test = auto_preprocess(degree)\n","\n","  for index, value in zip(g_range, g_nums):\n","    obj = svm.SVC(C=c, gamma=value)\n","    obj.fit(X_train, y_train)\n","      \n","    # Training\n","    y_pred_train = obj.predict(X_train)\n","    acc_train = accuracy_score(y_train, y_pred_train)\n","    acc_train_array[index] = acc_train\n","      \n","    y_pred_test = obj.predict(X_test)\n","    acc_test = accuracy_score(y_test, y_pred_test)\n","    acc_test_array[index] = acc_test\n","\n","    print(f'Gamma: {value:.1e}, Testing accuracy: {acc_test}')\n","  \n","  return acc_train_array, acc_test_array, g_nums\n","\n","#------------------------------------------------------------------------------#"],"metadata":{"id":"3UK2xNTkIJMR"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"mE6r9HYZxz9n"},"source":["#**1. LOGISTIC REGRESSION**"]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":100604,"status":"ok","timestamp":1678731886880,"user":{"displayName":"Abhishek Borkar","userId":"13435915907761363769"},"user_tz":0},"id":"YzG505WNx3E0","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"f01457a0-149d-4927-f064-1948013a02d0"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","The best degree of polynomials for Accuracy: 3 \n","Accuracy:  0.8340248962655602 \n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","The best degree of polynomials for F1: 3 \n","F1 Score:  0.75 \n","\n","C: 1.0e-10, Testing accuracy: 0.6431535269709544\n","C: 1.0e-09, Testing accuracy: 0.6431535269709544\n","C: 1.0e-08, Testing accuracy: 0.6431535269709544\n","C: 1.0e-07, Testing accuracy: 0.6431535269709544\n","C: 1.0e-06, Testing accuracy: 0.6431535269709544\n","C: 1.0e-05, Testing accuracy: 0.6431535269709544\n","C: 1.0e-04, Testing accuracy: 0.6431535269709544\n","C: 1.0e-03, Testing accuracy: 0.6431535269709544\n","C: 1.0e-02, Testing accuracy: 0.6431535269709544\n","C: 1.0e-01, Testing accuracy: 0.8091286307053942\n","C: 1.0e+00, Testing accuracy: 0.8547717842323651\n","C: 1.0e+01, Testing accuracy: 0.8298755186721992\n","C: 1.0e+02, Testing accuracy: 0.8132780082987552\n","C: 1.0e+03, Testing accuracy: 0.8049792531120332\n","C: 1.0e+04, Testing accuracy: 0.8049792531120332\n","C: 1.0e+05, Testing accuracy: 0.8049792531120332\n","C: 1.0e+06, Testing accuracy: 0.8008298755186722\n","C: 1.0e+07, Testing accuracy: 0.8049792531120332\n","C: 1.0e+08, Testing accuracy: 0.8008298755186722\n","C: 1.0e+09, Testing accuracy: 0.8049792531120332\n","C: 1.0e+10, Testing accuracy: 0.8008298755186722\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","The best C: 1.0\n","######################################################################\n","Accuracy Degree Analysis -\n","\n","Training - \n","Accuracy: 0.8338 \n","F1 Score: 0.7840\n","Log Loss: 5.9888\n","\n","\n","Testing - \n","Accuracy: 0.8548 \n","F1 Score: 0.7826\n","Log Loss: 5.2346\n","\n","              precision    recall  f1-score   support\n","\n","           0       0.85      0.88      0.86       394\n","           1       0.80      0.77      0.78       256\n","\n","    accuracy                           0.83       650\n","   macro avg       0.83      0.82      0.82       650\n","weighted avg       0.83      0.83      0.83       650\n","\n","              precision    recall  f1-score   support\n","\n","           0       0.86      0.92      0.89       155\n","           1       0.84      0.73      0.78        86\n","\n","    accuracy                           0.85       241\n","   macro avg       0.85      0.83      0.84       241\n","weighted avg       0.85      0.85      0.85       241\n","\n","Training:  0.8032786885245902 0.765625\n","Testing:  0.84 0.7325581395348837\n"]},{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Pclass     Sex   Age  Survival Prediction  Ground Truth\n","0              1       3    male   NaN                    0             0\n","1              2       2  female  18.0                    1             1\n","2              3       3    male  21.0                    0             0\n","3              4       3  female   NaN                    1             1\n","4              5       3  female  18.0                    1             0\n","..           ...     ...     ...   ...                  ...           ...\n","236          237       2    male  27.0                    0             0\n","237          238       1  female  19.0                    1             1\n","238          239       3  female   NaN                    0             0\n","239          240       1    male  26.0                    0             1\n","240          241       3    male  32.0                    0             0\n","\n","[241 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-b6473874-f842-4e76-97c3-8b1ffab10af4\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>Survival Prediction</th>\n","      <th>Ground Truth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>female</td>\n","      <td>18.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>21.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>18.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>237</td>\n","      <td>2</td>\n","      <td>male</td>\n","      <td>27.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>238</td>\n","      <td>1</td>\n","      <td>female</td>\n","      <td>19.0</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>238</th>\n","      <td>239</td>\n","      <td>3</td>\n","      <td>female</td>\n","      <td>NaN</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>239</th>\n","      <td>240</td>\n","      <td>1</td>\n","      <td>male</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>240</th>\n","      <td>241</td>\n","      <td>3</td>\n","      <td>male</td>\n","      <td>32.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>241 rows × 6 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b6473874-f842-4e76-97c3-8b1ffab10af4')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-b6473874-f842-4e76-97c3-8b1ffab10af4 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-b6473874-f842-4e76-97c3-8b1ffab10af4');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":58},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["from sklearn.metrics._plot.confusion_matrix import ConfusionMatrixDisplay\n","max_degree = 15\n","degrees = range(1, max_degree+1)\n","\n","acc_train_array, acc_test_array, f1_train_array, f1_test_array = polynom(max_degree, degrees, LogisticRegression())\n","    \n","plt.plot(degrees, acc_train_array[1:], label='Accuracy on training dataset')\n","plt.plot(degrees, acc_test_array[1:], label='Accuracy on testing dataset')\n","plt.xlabel('Degree of polynomial features')\n","plt.ylabel('Accuracy')\n","plt.title('Accuracy v/s Degree - Logistic')\n","plt.legend()\n","plt.show()\n","\n","acc_best_degree = np.nanargmax(acc_test_array) # Finds the largest testing Accuracy in the array (ignoring any NaN values).\n","print('\\nThe best degree of polynomials for Accuracy:', acc_best_degree,\n","      \"\\nAccuracy: \", acc_test_array[acc_best_degree], \"\\n\")\n","\n","plt.plot(degrees, f1_train_array[1:], label='F1 on training dataset')\n","plt.plot(degrees, f1_test_array[1:], label='F1 on testing dataset')\n","plt.xlabel('Degree of polynomial features')\n","plt.ylabel('F1 Score')\n","plt.title('F1 v/s Degree - Logistic')\n","plt.legend()\n","plt.show()\n","\n","f1_best_degree = np.nanargmax(f1_test_array) # Finds the largest Tetsing F1 in the array (ignoring any NaN values).\n","print('\\nThe best degree of polynomials for F1:', f1_best_degree,\n","      \"\\nF1 Score: \", f1_test_array[f1_best_degree], \"\\n\")\n","\n","# degree_types = [acc_best_degree, f1_best_degree]\n","# degree_names = [\"Accuracy\", \"F1 Score\"]\n","\n","################################################################################\n","\n","acc_train_array, acc_test_array, c_nums = param_c(10, acc_best_degree, \"Logistic_Regression\")\n","\n","# Plot our graph of accuracy for training and testing \n","print()\n","plt.plot(c_nums, acc_train_array, label='Accuracy on training dataset')\n","plt.plot(c_nums, acc_test_array, label='Accuracy on testing dataset')\n","plt.xlabel(r'Inverse of Regularization strength - C')\n","plt.ylabel('Accuracy')\n","plt.title('Accuracy v/s C - Logistic')\n","plt.xscale('log')\n","plt.legend()\n","plt.show()\n","\n","# Select our best performing alpha (lowest MSE)\n","best_c_index = np.argmax(acc_test_array)\n","best_c = c_nums[best_c_index]\n","print('\\nThe best C:', best_c)\n","\n","################################################################################\n","# LOGISTIC REGRESSION\n","\n","# for deg, name in zip(degree_types, degree_names):\n","X_train, X_test = auto_preprocess(acc_best_degree)\n","\n","log_obj = LogisticRegression(C=best_c, solver='liblinear', penalty='l1')\n","log_obj.fit(X_train, y_train)\n","# print(log_obj.score(X_test, y_test))\n","  \n","y_pred_train_log = log_obj.predict(X_train)\n","y_pred_test_log = log_obj.predict(X_test)\n","  \n","# The accuracy for the test and train data\n","print(\"######################################################################\")\n","print(\"Accuracy Degree Analysis -\")\n","print('\\nTraining - \\nAccuracy: {:.4f} \\nF1 Score: {:.4f}\\nLog Loss: {:.4f}\\n'.format(accuracy_score(y_train, y_pred_train_log),\n","                                                                                   f1_score(y_train, y_pred_train_log),\n","                                                                                   log_loss(y_train, y_pred_train_log)))\n","print('\\nTesting - \\nAccuracy: {:.4f} \\nF1 Score: {:.4f}\\nLog Loss: {:.4f}\\n'.format(accuracy_score(y_test, y_pred_test_log),\n","                                                                                  f1_score(y_test, y_pred_test_log),\n","                                                                                  log_loss(y_test, y_pred_test_log)))\n","\n","# Used because of the imbalance of the data\n","conmat_train = confusion_matrix(y_train, y_pred_train_log)\n","print(classification_report(y_train, y_pred_train_log))\n","\n","conmat_test = confusion_matrix(y_test, y_pred_test_log)\n","print(classification_report(y_test, y_pred_test_log))\n","\n","d = {\"Training\":conmat_train,\n","     \"Testing\":conmat_test}\n","\n","# REFERENCE\n","# https://builtin.com/data-science/evaluating-classification-models\n","\n","for ele in d:\n","  ConfusionMatrixDisplay(d[ele], display_labels=['Not Survived', 'Survived']).plot(cmap=plt.cm.Blues)\n","\n","# for ele in d:\n","#   val = np.mat(d[ele]) \n","#   classnames = list(set(y_train))\n","#   df_cm = pd.DataFrame(val, index=classnames, columns=classnames)\n","#   plt.figure()\n","#   heatmap = sns.heatmap(df_cm, annot=True, cmap=\"Blues\")\n","#   heatmap.yaxis.set_ticklabels(heatmap.yaxis.get_ticklabels(), rotation=0, ha='right')\n","#   heatmap.xaxis.set_ticklabels(heatmap.xaxis.get_ticklabels(), rotation=45, ha='right')\n","\n","#   plt.ylabel('Actual')\n","#   plt.xlabel('Predicted')\n","\n","#   plt.title(f'Logistic Regression {ele} Model Results')\n","#   plt.show()  \n","#   print() \n","\n","\n","print(\"Training: \", precision_score(y_train, y_pred_train_log), recall_score(y_train, y_pred_train_log))\n","print(\"Testing: \", precision_score(y_test, y_pred_test_log), recall_score(y_test, y_pred_test_log))\n","\n","# 'PassengerId', 'Pclass', 'Name', 'Sex', 'Age', 'SibSp', 'Parch', 'Ticket', 'Fare', 'Embarked'\n","submission = pd.DataFrame({\"PassengerId\": testing_data['PassengerId'],\n","                           \"Pclass\":testing_data['Pclass'],\n","                           'Sex':testing_data['Sex'],\n","                           'Age':testing_data['Age'],\n","                           \"Survival Prediction\":y_pred_test_log,\n","                           \"Ground Truth\":testing_data['Target: Survived']})\n","submission\n","#------------------------------------------------------------------------------#"]},{"cell_type":"code","source":["# X_train_raw.loc[(X_train_raw.Fare==0) & (X_train_raw.Pclass==1), 'Fare']\n","# X_test_raw[X_test_raw['Pclass']==1]['Fare'].mean()\n","male_survival_rate = len(submission.loc[(submission['Sex'] == 'male') & (submission['Ground Truth'] == 1) & (submission['Survival Prediction'] == 1)])\n","female_survival_rate = len(submission.loc[(submission['Sex'] == 'female') & (submission['Ground Truth'] == 1) & (submission['Survival Prediction'] == 1)])\n","\n","male_ratio = submission[(submission['Sex'] == 'male') & (submission['Ground Truth'] == 1) & (submission['Survival Prediction'] == 1)]\n","female_ratio = submission[(submission['Sex'] == 'female') & (submission['Ground Truth'] == 1) & (submission['Survival Prediction'] == 1)]\n","\n","male_female_ratio = pd.concat([male_ratio, female_ratio], axis=0)\n","print(male_female_ratio)\n","\n","print(male_survival_rate, female_survival_rate)\n","#------------------------------------------------------------------------------#"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-HoABuHL27oD","executionInfo":{"status":"ok","timestamp":1678732062968,"user_tz":0,"elapsed":312,"user":{"displayName":"Abhishek Borkar","userId":"13435915907761363769"}},"outputId":"8cf9e550-64d3-47d6-a909-6f0db46c3721"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["     PassengerId  Pclass     Sex    Age  Survival Prediction  Ground Truth\n","29            30       1    male  36.00                    1             1\n","87            88       1    male  35.00                    1             1\n","105          106       2    male   0.67                    1             1\n","138          139       3    male   1.00                    1             1\n","152          153       1    male  11.00                    1             1\n","..           ...     ...     ...    ...                  ...           ...\n","224          225       2  female  28.00                    1             1\n","225          226       3  female  15.00                    1             1\n","229          230       1  female  56.00                    1             1\n","230          231       2  female  25.00                    1             1\n","237          238       1  female  19.00                    1             1\n","\n","[63 rows x 6 columns]\n","8 55\n"]}]},{"cell_type":"code","source":["plt.figure(figsize=(10,5))\n","ax = plt.subplot(1,2,1)\n","ax = sns.countplot(x='Sex', data=male_female_ratio)\n","ax.bar_label(ax.containers[0])\n","plt.title(\"Gender Survival Ratio\", fontsize=18)\n","ax =plt.subplot(1,2,2)\n","ax=male_female_ratio['Sex'].value_counts().plot.pie(explode=[0.05, 0.05],autopct='%1.2f%%',shadow=True)\n","ax.set_title(label = \"Gender Survival Ratio\", fontsize = 18)\n","#------------------------------------------------------------------------------#"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":371},"id":"2J2xkX42M6xm","executionInfo":{"status":"ok","timestamp":1678732104087,"user_tz":0,"elapsed":674,"user":{"displayName":"Abhishek Borkar","userId":"13435915907761363769"}},"outputId":"e91e9057-8663-4987-91ac-302723de674b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Gender Survival Ratio')"]},"metadata":{},"execution_count":64},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x360 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","metadata":{"id":"u65DAwacyU6x"},"source":["#***2. SVM***"]},{"cell_type":"code","source":["def param_kernel(degree, c):\n","  kernels = {'linear':[], 'poly':[], 'rbf':[], 'sigmoid':[]}\n","  for kernel in kernels:\n","    # SVM\n","    X_train, X_test = auto_preprocess(degree=degree)\n","\n","    obj = svm.SVC(C=c, kernel=kernel)\n","    obj.fit(X_train, y_train)\n","    \n","    y_pred_train_log = obj.predict(X_train)\n","    y_pred_test_log = obj.predict(X_test)\n","\n","    kernels[kernel].append(accuracy_score(y_test, y_pred_test_log))\n","  \n","  return kernels \n","\n","#------------------------------------------------------------------------------#                                                      "],"metadata":{"id":"dVJdwKYLzE4X"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"executionInfo":{"elapsed":24219,"status":"ok","timestamp":1678727079091,"user":{"displayName":"Abhishek Borkar","userId":"13435915907761363769"},"user_tz":0},"id":"Lk-Fjx8JypcG","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"483fe6b6-16d2-42d7-ad21-5990f507ea94"},"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","The best degree of polynomials for Accuracy: 1 \n","Accuracy:  0.8423236514522822 \n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","The best degree of polynomials for F1: 1 \n","F1 Score:  0.7625 \n","\n","C: 1.0e-05, Testing accuracy: 0.6431535269709544\n","C: 1.0e-04, Testing accuracy: 0.6431535269709544\n","C: 1.0e-03, Testing accuracy: 0.6431535269709544\n","C: 1.0e-02, Testing accuracy: 0.6431535269709544\n","C: 1.0e-01, Testing accuracy: 0.8008298755186722\n","C: 1.0e+00, Testing accuracy: 0.8423236514522822\n","C: 1.0e+01, Testing accuracy: 0.8423236514522822\n","C: 1.0e+02, Testing accuracy: 0.8008298755186722\n","C: 1.0e+03, Testing accuracy: 0.7759336099585062\n","C: 1.0e+04, Testing accuracy: 0.7634854771784232\n","C: 1.0e+05, Testing accuracy: 0.7427385892116183\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","The best C: 1.0 \n","\n","Gamma: 1.0e-05, Testing accuracy: 0.6431535269709544\n","Gamma: 1.0e-04, Testing accuracy: 0.6431535269709544\n","Gamma: 1.0e-03, Testing accuracy: 0.6970954356846473\n","Gamma: 1.0e-02, Testing accuracy: 0.8008298755186722\n","Gamma: 1.0e-01, Testing accuracy: 0.8381742738589212\n","Gamma: 1.0e+00, Testing accuracy: 0.8298755186721992\n","Gamma: 1.0e+01, Testing accuracy: 0.6887966804979253\n","Gamma: 1.0e+02, Testing accuracy: 0.6473029045643154\n","Gamma: 1.0e+03, Testing accuracy: 0.6514522821576764\n","Gamma: 1.0e+04, Testing accuracy: 0.6431535269709544\n","Gamma: 1.0e+05, Testing accuracy: 0.6473029045643154\n","\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"stream","name":"stdout","text":["\n","The best Gamma: 0.1\n","Parameter Gamma Increases the Accuracy?  False\n","######################################################################\n","\n","Training - \n","Accuracy: 0.8308 \n","F1 Score: 0.7737\n","Log Loss: 6.0997\n","\n","\n","Testing - \n","Accuracy: 0.8423 \n","F1 Score: 0.7625\n","Log Loss: 5.6832\n","\n","              precision    recall  f1-score   support\n","\n","           0       0.84      0.89      0.86       394\n","           1       0.82      0.73      0.77       256\n","\n","    accuracy                           0.83       650\n","   macro avg       0.83      0.81      0.82       650\n","weighted avg       0.83      0.83      0.83       650\n","\n","              precision    recall  f1-score   support\n","\n","           0       0.85      0.92      0.88       155\n","           1       0.82      0.71      0.76        86\n","\n","    accuracy                           0.84       241\n","   macro avg       0.84      0.81      0.82       241\n","weighted avg       0.84      0.84      0.84       241\n","\n","Training:  0.8173913043478261 0.734375\n","Testing:  0.8243243243243243 0.7093023255813954\n"]},{"output_type":"execute_result","data":{"text/plain":["     PassengerId  Survived Prediction  Survived Reality\n","0              1                    0                 0\n","1              2                    1                 1\n","2              3                    0                 0\n","3              4                    1                 1\n","4              5                    1                 0\n","..           ...                  ...               ...\n","236          237                    0                 0\n","237          238                    1                 1\n","238          239                    0                 0\n","239          240                    0                 1\n","240          241                    0                 0\n","\n","[241 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-5a12d93a-7a30-4547-8d38-8cc34fe79e3b\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived Prediction</th>\n","      <th>Survived Reality</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>236</th>\n","      <td>237</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>237</th>\n","      <td>238</td>\n","      <td>1</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>238</th>\n","      <td>239</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>239</th>\n","      <td>240</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>240</th>\n","      <td>241</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>241 rows × 3 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5a12d93a-7a30-4547-8d38-8cc34fe79e3b')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-5a12d93a-7a30-4547-8d38-8cc34fe79e3b button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-5a12d93a-7a30-4547-8d38-8cc34fe79e3b');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":49},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAAWoAAAEICAYAAAB25L6yAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjUuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/NK7nSAAAACXBIWXMAAAsTAAALEwEAmpwYAAAYKUlEQVR4nO3de5xV5X3v8c+PS0RBRPCCCjponABCvWRAPPEICbUSjBgTUYimEqJWrSeVGENeNueUJCRNrNUkJ8aTxkRSLZeIPTRaYjTEe7VcJwUEDPGMgmgTEKooKCPP+WOvwYEMzCV7Zh6Gz/v1mtdrr7We9azfXgPf/exn7Vk7UkpIkvLVqb0LkCTtm0EtSZkzqCUpcwa1JGXOoJakzBnUkpQ5g1raz0XEjIiY3t51qPUY1CIiHouIzRFxUHvX0l4iYmJEzGzmPjUR8af1licU53Fk+SvUgcygPsBFRAXw34EEjGvjY3dpy+M14nxgfkt3jogrgDuA81NKjzdz35zOgzJkUOvPgWeBGcAV9TdERP+I+OeI+H1EbIqI79XbdlVErIqINyLiuYg4o1ifIuL99drtelseEaMiYn1ETI2IV4G7I+LwiHiwOMbm4nG/evv3joi7I2JDsX1esX5FRFxQr13XiNgYEafv+QSLOj9Wb7lLcby6mjsB5wIPRUS3iLi3eL5bImJRRBy9rxMYEX8B/D1wXkrp34p1h0XEjyLilYh4OSKmR0TnYtukiHg6Im6PiE3AtOI83RER/1qc03+PiJPqHWNgRDwSEa9FxJqIuGQvtRxRnMMtRdsni+en/Zi/QP058E/Fz3l1oVSEyoPAi0AFcBwwu9g2HphW7NuT0kh8UxOP1xfoDZwAXE3p3+DdxfLxwDbge/Xa3wMcApwCHAXcXqz/R+Dyeu3GAq+klJY1cMxZwMR6y+cBG1NKS4vl4cALKaWNlF6sDgP6A32Aa4qa9uZa4KvA6JTS4nrrZwC1wPuB04E/A66st/1M4AXgaODrxboJwFeAw4G1desjojvwCDCzOAcTgO9HxOAG6rkRWA8cWfR9M6V3S9qPGdQHsIg4m1JA/jSltAT4LfCpYvNw4FjgppTSmyml7Smlp4ptVwK3pJQWpZK1KaUXm3jYncDfpJTeTiltSyltSindn1J6K6X0BqVwGlnUdwzwUeCalNLmlNKOetMK9wJjI6JnsfxpSqHekJnAuIg4pFj+FKXwrlN/2mMHpYB+f0rp3ZTSkpTS6/t4PudSekeyvG5F8WI3FrihOHe/o/QCM6HefhtSSv87pVSbUqp7Ifi/KaWFKaVaSi+cpxXrPwbUpJTuLtovA+4HxjdQzw7gGOCE4nw9mbyhz37PoD6wXQE8XIwkoRRoddMf/YEXi9DYU39Kod4Sv08pba9biIhDIuIHEfFiRLwOPAH0Kkb0/YHXUkqb9+wkpbQBeBr4ZET0ohTo/9TQAVNKa4FVwAVFWI+j9FzrjOW9oL4H+AUwu5huuSUiuu7j+VwLVAJ3RUQU604AugKvFFMQW4AfUBoN11nXQF+v1nv8FtCjXn9n1vVV9HcZpXcne/o7SqPxhyPihYj40j5q137CixgHqIg4GLgE6FzMFwMcRCkkT6UUJMdHRJcGwnodcBINe4vSVEWdvpTeitfZc3R3I/AB4MyU0qsRcRqwDIjiOL0joldKaUsDx/oJpdF9F+CZlNLLe3u+vDf90Ql4rghvIqIvpRHoUoCU0g5K0w9fKS60zgfWAD/aS7//CYwGHge+Tym41wFvA0fs5YUOmjcdsQ54PKV0bmMNi3clNwI3RsQQ4FcRsSiltKAZx1NmHFEfuD4OvAsMpvQW+zRgEPAkpbnnhcArwDcjontxke1Dxb53AV+IiA9Gyfsj4oRiWzXwqYjoHBFjKKYx9uFQSnPAWyKiN/A3dRtSSq8AP6c0H3t4ccHwnHr7zgPOAP6K0pz1vsymNE98LbuPpj8KPFQ3PRARH46IocWI/nVKUwk799VxMbofDYyJiNuLuh8G/j4iekZEp4g4KVr+sb0HgcqI+HRxDrpGxLCIGLRnw4j4WPH7COC/KP2O91m/8mdQH7iuAO5OKb2UUnq17ofShbzLKI1oL6B0MewlSqPiSwFSSvdRmkueCbxBKTB7F/3+VbHflqKfeY3U8W3gYGAjpbneh/bY/mlKYbka+B1wQ92GYm73fmAA8M/7OkgRns8A/w2YU2/Tnh/L6wvMpRTSqyiNlPc2912//5eAjwAXR8TfUnqxex/wHLC56POYxvrZS99vUHqRmQBsoDRF8i1K74D2dDLwS2Arpef7/ZTSoy05rvIRXmfQ/iwi/hdQmVK6vNHGf7hvF0qhd2IjFwylduUctfZbxVTJZymNuluiN/A/DWnlzqkP7Zci4ipKF9l+nlJ6oiV9pJR+l1K6s7yVSeXn1IckZc4RtSRlruxz1EcccUSqqKgod7eS1KEtWbJkY0rpyIa2lT2oKyoqWLx4ceMNJUm7RMReb8Pg1IckZc6glqTMGdSSlDn/4EVSWezYsYP169ezffv2xhsfwLp160a/fv3o2nVfN2XcnUEtqSzWr1/PoYceSkVFBe/d8VX1pZTYtGkT69evZ8CAAU3ez6kPSWWxfft2+vTpY0jvQ0TQp0+fZr/rMKgllY0h3biWnCODWpIy5xy1pFZxbqeGvtKx5R7ZeV+jbXr06MHWrVvZsGEDn/vc55g7d25Za2gvjqgldTjHHntsq4d0be3evmWt/AxqSR1OTU0NQ4YMAWDGjBl84hOfYMyYMZx88sl88Ytf3NXu4Ycf5qyzzuKMM85g/PjxbN26FYCvfvWrDBs2jCFDhnD11VdTd5fRUaNGccMNN1BVVcV3vvOdNns+BrWkDq+6upo5c+awfPly5syZw7p169i4cSPTp0/nl7/8JUuXLqWqqorbbrsNgOuvv55FixaxYsUKtm3bxoMPPrirr3feeYfFixdz4403tln9zlFL6vBGjx7NYYcdBsDgwYN58cUX2bJlC8899xwf+lDpO5vfeecdzjrrLAAeffRRbrnlFt566y1ee+01TjnlFC644AIALr300jav36CW1OEddNB73wPcuXNnamtrSSlx7rnnMmvWrN3abt++neuuu47FixfTv39/pk2bttvnnrt3795mdddx6kPSAWnEiBE8/fTTrF27FoA333yT559/flcoH3HEEWzdujWLT444opbUKprycbr2dOSRRzJjxgwmTpzI22+/DcD06dOprKzkqquuYsiQIfTt25dhw4a1c6Wt8J2JVVVVyS8OkA48q1atYtCgQe1dxn6hoXMVEUtSSlUNtXfqQ5IyZ1BLUuYMaknKnEEtSZkzqCUpcwa1JGXOz1FLahVnXHt7WftbeueUsvYHpZss3XrrrVRVNfipuGw4opakzBnUkjqMmpoaBg4cyGWXXcagQYO4+OKLeeutt1iwYAGnn346Q4cOZfLkybv+ErHOj3/8Y2644YZdyz/84Q+ZMqX8I/iWMqgldShr1qzhuuuuY9WqVfTs2ZPbbruNSZMm7brNaW1tLXfeeedu+1xyySU88MAD7NixA4C7776byZMnt0f5DTKoJXUo/fv333Xr0ssv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\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}],"source":["################################################################################\n","max_degree = 10\n","degrees = range(1, max_degree+1)\n","\n","acc_train_array, acc_test_array, f1_train_array, f1_test_array = polynom(max_degree, degrees, svm.SVC())\n","\n","plt.plot(degrees, acc_train_array[1:], label='Accuracy on training dataset')\n","plt.plot(degrees, acc_test_array[1:], label='Accuracy on testing dataset')\n","plt.xlabel('Degree of polynomial features')\n","plt.ylabel('Accuracy')\n","plt.title('Accuracy v/s Degree - SVM')\n","plt.legend()\n","plt.show()\n","\n","acc_best_degree = np.nanargmax(acc_test_array) # Finds the largest testing Accuracy in the array (ignoring any NaN values).\n","print('\\nThe best degree of polynomials for Accuracy:', acc_best_degree,\n","      \"\\nAccuracy: \", acc_test_array[acc_best_degree], \"\\n\")\n","\n","model_acc = acc_test_array[acc_best_degree]\n","\n","plt.plot(degrees, f1_train_array[1:], label='F1 on training dataset')\n","plt.plot(degrees, f1_test_array[1:], label='F1 on testing dataset')\n","plt.xlabel('Degree of polynomial features')\n","plt.ylabel('F1 Score')\n","plt.title('F1 v/s Degree - SVM')\n","plt.legend()\n","plt.show()\n","\n","f1_best_degree = np.nanargmax(f1_test_array) # Finds the largest Tetsing F1 in the array (ignoring any NaN values).\n","print('\\nThe best degree of polynomials for F1:', f1_best_degree,\n","      \"\\nF1 Score: \", f1_test_array[f1_best_degree], \"\\n\")\n","\n","################################################################################\n","\n","acc_train_array, acc_test_array, c_nums = param_c(5, acc_best_degree, \"svm\")\n","\n","# Plot our graph of accuracy for training and testing \n","print()\n","plt.plot(c_nums, acc_train_array, label='Accuracy on training dataset')\n","plt.plot(c_nums, acc_test_array, label='Accuracy on testing dataset')\n","plt.xlabel(r'Inverse of Regularization strength - C')\n","plt.ylabel('Accuracy')\n","plt.title('Accuracy v/s C - SVM')\n","plt.xscale('log')\n","plt.legend()\n","plt.show()\n","\n","# Select our best performing alpha (lowest MSE)\n","best_c_index = np.argmax(acc_test_array)\n","best_c = c_nums[best_c_index]\n","print('\\nThe best C:', best_c, \"\\n\")\n","\n","################################################################################\n","\n","acc_train_array, acc_test_array, g_nums = param_gamma(5, acc_best_degree, best_c)\n","\n","# Plot our graph of accuracy for training and testing \n","print()\n","plt.plot(g_nums, acc_train_array, label='Accuracy on training dataset')\n","plt.plot(g_nums, acc_test_array, label='Accuracy on testing dataset')\n","plt.xlabel('Gamma')\n","plt.ylabel('Accuracy')\n","plt.title('Accuracy v/s Gamma - SVM')\n","plt.xscale('log')\n","plt.legend()\n","plt.show()\n","\n","# Select our best performing alpha (lowest MSE)\n","best_g_index = np.argmax(acc_test_array)\n","best_g = g_nums[best_g_index]\n","print('\\nThe best Gamma:', best_g)\n","\n","print(\"Parameter Gamma Increases the Accuracy? \", (acc_test_array[best_g_index] > model_acc))\n","\n","################################################################################\n","\n","kernel_data = param_kernel(acc_best_degree, best_c)\n","data = pd.DataFrame(kernel_data)\n","data.plot(kind='barh', title = 'Accuracy v/s Kernels', colormap = 'viridis')\n","\n","\n","\n","################################################################################\n","# SVM\n","X_train, X_test = auto_preprocess(degree=acc_best_degree)\n","\n","obj = svm.SVC(C=best_c,)\n","obj.fit(X_train, y_train)\n","    \n","y_pred_train_log = obj.predict(X_train)\n","y_pred_test_log = obj.predict(X_test)\n","\n","print(\"######################################################################\")\n","print('\\nTraining - \\nAccuracy: {:.4f} \\nF1 Score: {:.4f}\\nLog Loss: {:.4f}\\n'.format(accuracy_score(y_train, y_pred_train_log),\n","                                                                                 f1_score(y_train, y_pred_train_log),\n","                                                                                  log_loss(y_train, y_pred_train_log)))\n","                                                                                    \n","print('\\nTesting - \\nAccuracy: {:.4f} \\nF1 Score: {:.4f}\\nLog Loss: {:.4f}\\n'.format(accuracy_score(y_test, y_pred_test_log),\n","                                                                                  f1_score(y_test, y_pred_test_log),\n","                                                                                  log_loss(y_test, y_pred_test_log)))\n","\n","# Used because of the imbalance of the data\n","conmat_train = confusion_matrix(y_train, y_pred_train_log)\n","print(classification_report(y_train, y_pred_train_log))\n","\n","conmat_test = confusion_matrix(y_test, y_pred_test_log)\n","print(classification_report(y_test, y_pred_test_log))\n","\n","d = {\"Training\":conmat_train,\n","     \"Testing\":conmat_test}\n","\n","# REFERENCE\n","# https://builtin.com/data-science/evaluating-classification-models\n","\n","for ele in d:\n","  ConfusionMatrixDisplay(d[ele], display_labels=['Not Survived', 'Survived']).plot(cmap=plt.cm.Blues)\n","\n","\n","print(\"Training: \", precision_score(y_train, y_pred_train_log), recall_score(y_train, y_pred_train_log))\n","print(\"Testing: \", precision_score(y_test, y_pred_test_log), recall_score(y_test, y_pred_test_log))\n","                                                                            \n","submission = pd.DataFrame({\"PassengerId\": testing_data['PassengerId'],\"Survived Prediction\":y_pred_test_log, \"Survived Reality\":testing_data['Target: Survived']})\n","submission\n","#------------------------------------------------------------------------------#"]}]}